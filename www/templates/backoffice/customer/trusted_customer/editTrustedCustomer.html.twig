{% extends 'backoffice/base.html.twig' %}

{% block body %}
    <div class="container-fluid">
        <h1>Edition Customers</h1>

        <div class="card collapsable-card">
            <div class="card-header">
                <a href="" title="Action">Action</a>
            </div>
            <div class="card-body">
                <a href="{{ path('backoffice/trusted_customer/edit') }}" title="Nouveau"
                   class="btn btn-info btn-add">Nouveau</a>
            </div>
        </div>

        <div class="card collapsable-card open">
            <div class="card-header">
                <a href="" title="Edition">Edition</a>
            </div>
            <div class="card-body">
                {{ form_start(form) }}

                <div class="flex_block">
                    <fieldset class="mt-5 mb-3 flex_100">
                        <legend>Le client qui nous fait confiance</legend>
                    </fieldset>
                    <div>
                        {{ form_row(form.name) }}
                        {{ form_row(form.webUrl) }}
                        {{ form_row(form.logoFile) }}
                        {% if trustedCustomer and trustedCustomer.logo %}
                            <img class="img-fluid" src="{{ trustedCustomer.logoPaths.domain.icon }}" alt="" />
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>

        {{ form_row(form.submit) }}
        {{ form_end(form) }}
    </div>
{% endblock %}


{% block javascripts %}
    {{ parent() }}
    {{ encore_entry_script_tags('wysiwyg') }}

    <script type="text/javascript">

        $(document).ready(function () {

            $('.add-another-collection-widget').click(function (e) {
                var list = jQuery(jQuery(this).attr('data-list-selector'));
                // Try to find the counter of the list or use the length of the list
                var counter = list.data('widget-counter') || list.children().length;

                // grab the prototype template
                var newWidget = list.attr('data-prototype');
                // replace the "__name__" used in the id and name of the prototype
                // with a number that's unique to your emails
                // end name attribute looks like name="contact[emails][2]"
                newWidget = newWidget.replace(/__name__/g, counter);
                // Increase the counter
                counter++;
                // And store it, the length cannot be used if deleting widgets is allowed
                list.data('widget-counter', counter);

                // create a new list element and add it to the list
                var newElem = jQuery(list.attr('data-widget-tags')).html(newWidget);
                newElem.appendTo(list);

                // relance bootstrap toogle
                $("[data-toggle='toggle']").bootstrapToggle('destroy')
                $("[data-toggle='toggle']").bootstrapToggle();
                var simpleWysiwygs = [];
                $('textarea.simple-wysiwyg').each(function () {
                    var thisElt = $(this);
                    var currentWysiwyg = thisElt.trumbowyg({
                        lang: 'fr',
                        svgPath: thisElt.attr('data-svgPath'),
                        btnsDef: {
                            // Customizables dropdowns
                            image: {
                                dropdown: ['insertImage', 'upload'],
                                ico: 'insertImage'
                            }
                        },
                        btns: [
                            ['viewHTML'],
                            ['undo', 'redo'],
                            ['formatting'],
                            ['fontsize'],
                            ['strong', 'em', 'del', 'underline'],
                            ['link'],
                            ['image'],
                            ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],
                            ['unorderedList', 'orderedList'],
                            ['foreColor', 'backColor'],
                            ['preformatted'],
                            ['horizontalRule'],
                            ['fullscreen'],
                            ['historyUndo', 'historyRedo']
                        ],
                        plugins: {
                            upload: {
                                // Some upload plugin options, see details below
                                serverPath: thisElt.attr('data-ajax-upload-url'),
                                // nom du post de l'image
                                fileFieldName: 'fileToUpload',
                                // nom de l'url de l'image dans le retour json
                                urlPropertyName: 'pictureUrl',
                                // autres paramètres à passer
                                data: [
                                    {name: 'entity', value: thisElt.attr('data-entity')},
                                    {name: 'id', value: thisElt.attr('data-id')}
                                ]
                            },
                            resizimg: {
                                minSize: 64,
                                step: 16,
                            }
                        }
                    });

                    simpleWysiwygs.push(currentWysiwyg);
                });
            });
        });
    </script>

{% endblock %}